/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.phybros.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum Enchantment implements org.apache.thrift.TEnum {
  PROTECTION_ENVIRONMENTAL(0),
  PROTECTION_FIRE(1),
  PROTECTION_FALL(2),
  PROTECTION_EXPLOSIONS(3),
  PROTECTION_PROJECTILE(4),
  OXYGEN(5),
  WATER_WORKER(6),
  DAMAGE_ALL(16),
  DAMAGE_UNDEAD(17),
  DAMAGE_ARTHROPODS(18),
  KNOCKBACK(19),
  FIRE_ASPECT(20),
  LOOT_BONUS_MOBS(21),
  DIG_SPEED(32),
  SILK_TOUCH(33),
  DURABILITY(34),
  LOOT_BONUS_BLOCKS(35),
  ARROW_DAMAGE(48),
  ARROW_KNOCKBACK(49),
  ARROW_FIRE(50),
  ARROW_INFINITE(51);

  private final int value;

  private Enchantment(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static Enchantment findByValue(int value) { 
    switch (value) {
      case 0:
        return PROTECTION_ENVIRONMENTAL;
      case 1:
        return PROTECTION_FIRE;
      case 2:
        return PROTECTION_FALL;
      case 3:
        return PROTECTION_EXPLOSIONS;
      case 4:
        return PROTECTION_PROJECTILE;
      case 5:
        return OXYGEN;
      case 6:
        return WATER_WORKER;
      case 16:
        return DAMAGE_ALL;
      case 17:
        return DAMAGE_UNDEAD;
      case 18:
        return DAMAGE_ARTHROPODS;
      case 19:
        return KNOCKBACK;
      case 20:
        return FIRE_ASPECT;
      case 21:
        return LOOT_BONUS_MOBS;
      case 32:
        return DIG_SPEED;
      case 33:
        return SILK_TOUCH;
      case 34:
        return DURABILITY;
      case 35:
        return LOOT_BONUS_BLOCKS;
      case 48:
        return ARROW_DAMAGE;
      case 49:
        return ARROW_KNOCKBACK;
      case 50:
        return ARROW_FIRE;
      case 51:
        return ARROW_INFINITE;
      default:
        return null;
    }
  }
}
